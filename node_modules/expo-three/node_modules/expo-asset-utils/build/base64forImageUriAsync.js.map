{"version":3,"file":"base64forImageUriAsync.js","sourceRoot":"","sources":["../src/base64forImageUriAsync.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,YAAY,EAAE,iBAAiB,EAAE,MAAM,kBAAkB,CAAC;AACnE,OAAO,EAAE,KAAK,EAAE,MAAM,cAAc,CAAC;AACrC,OAAO,EAAE,YAAY,EAAE,MAAM,gBAAgB,CAAC;AAE9C,SAAS,YAAY,CAAC,GAAW;IAC/B,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE,CACrC,KAAK,CAAC,OAAO,CAAC,GAAG,EAAE,CAAC,KAAK,EAAE,MAAM,EAAE,EAAE,CAAC,OAAO,CAAC,EAAE,KAAK,EAAE,MAAM,EAAE,CAAC,EAAE,MAAM,CAAC,CAC1E,CAAC;AACJ,CAAC;AAED,MAAM,CAAC,KAAK,UAAU,sBAAsB,CAC1C,IAAS;IAQT,MAAM,KAAK,GAAG,MAAM,YAAY,CAAC,IAAI,CAAC,CAAC;IACvC,MAAM,IAAI,GAAG,MAAM,YAAY,CAAC,KAAK,CAAC,QAAS,CAAC,CAAC;IACjD,MAAM,IAAI,GAAG,MAAM,iBAAiB,CAAC,KAAK,CAAC,QAAS,EAAE;QACpD,QAAQ,EAAE,YAAY,CAAC,MAAM;KAC9B,CAAC,CAAC;IACH,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC;AACxB,CAAC","sourcesContent":["import { EncodingType, readAsStringAsync } from 'expo-file-system';\nimport { Image } from 'react-native';\nimport { resolveAsync } from './resolveAsync';\n\nfunction getSizeAsync(uri: string): Promise<{ width: number; height: number }> {\n  return new Promise((resolve, reject) =>\n    Image.getSize(uri, (width, height) => resolve({ width, height }), reject)\n  );\n}\n\nexport async function base64forImageUriAsync(\n  file: any\n): Promise<{\n  data: string;\n  size: {\n    width: number;\n    height: number;\n  };\n}> {\n  const asset = await resolveAsync(file);\n  const size = await getSizeAsync(asset.localUri!);\n  const data = await readAsStringAsync(asset.localUri!, {\n    encoding: EncodingType.Base64,\n  });\n  return { data, size };\n}\n"]}